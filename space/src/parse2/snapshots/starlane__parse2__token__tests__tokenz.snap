---
source: space/src/parse2/token.rs
expression: "format!(\"{:?}\",tokens)"
---
[TokenDef { span: LocatedSpan { offset: 0, line: 1, fragment: "\n", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Newline }, TokenDef { span: LocatedSpan { offset: 1, line: 2, fragment: "Release", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Ident(Camel(CamelCase("Release"))) }, TokenDef { span: LocatedSpan { offset: 8, line: 2, fragment: "(", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Open(Parens) }, TokenDef { span: LocatedSpan { offset: 9, line: 2, fragment: "version", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Ident(Skewer(SkewerCase("version"))) }, TokenDef { span: LocatedSpan { offset: 16, line: 2, fragment: "=", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Equals }, TokenDef { span: LocatedSpan { offset: 17, line: 2, fragment: "1.3.7", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Version(Version { major: 1, minor: 3, patch: 7 }) }, TokenDef { span: LocatedSpan { offset: 22, line: 2, fragment: ")", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Close(Parens) }, TokenDef { span: LocatedSpan { offset: 23, line: 2, fragment: "{", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Open(Curly) }, TokenDef { span: LocatedSpan { offset: 24, line: 2, fragment: "\n", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Newline }, TokenDef { span: LocatedSpan { offset: 25, line: 3, fragment: "  ", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Space }, TokenDef { span: LocatedSpan { offset: 27, line: 3, fragment: "+", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Plus }, TokenDef { span: LocatedSpan { offset: 28, line: 3, fragment: " ", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Space }, TokenDef { span: LocatedSpan { offset: 29, line: 3, fragment: "<", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Open(Angle) }, TokenDef { span: LocatedSpan { offset: 30, line: 3, fragment: "SomeClass", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Ident(Camel(CamelCase("SomeClass"))) }, TokenDef { span: LocatedSpan { offset: 39, line: 3, fragment: ">", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Close(Angle) }, TokenDef { span: LocatedSpan { offset: 40, line: 3, fragment: ";", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Terminator }, TokenDef { span: LocatedSpan { offset: 41, line: 3, fragment: "\n", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Newline }, TokenDef { span: LocatedSpan { offset: 42, line: 4, fragment: "}", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Close(Curly) }, TokenDef { span: LocatedSpan { offset: 43, line: 4, fragment: "       ", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Space }, TokenDef { span: LocatedSpan { offset: 50, line: 4, fragment: "\n", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Newline }, TokenDef { span: LocatedSpan { offset: 51, line: 5, fragment: "        ", extra: ParseOp: 'tokenz' data.len(): 59   }, kind: Space }]
